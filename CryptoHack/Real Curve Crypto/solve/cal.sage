"""
Resource: https://math.mit.edu/classes/18.783/2015/LectureNotes15.pdf
"""
#!/bin/usr/env sage

from mpmath import mp
import json
E = EllipticCurve([0, 0, 0, -1, 0])
L = E.period_lattice()
w1, w2 = L.basis(100)

gx = 1.15939524880832589559531697886995971202850341796875
g = E.change_ring(RR).lift_x(gx, all = True)
G = g[0]

px = 1052.1869486109503324827555468817188804055933729601321435932864694301534931492427433020783168479195188024409373571681097603398390379320742186401833284576176214641603772370675124838606986281131453644941
p = E.change_ring(RR).lift_x(px, all = True)
P = p[0]

Gx, Gy = [RR(c) for c in G.xy()]
Px, Py = [RR(c) for c in P.xy()]

zG = L.e_log_RC(Gx, Gy, prec = 800)
zP = L.e_log_RC(Px, Py, prec = 800)

coord_G = L.coordinates(zG)
coord_P = L.coordinates(zP)

x_G = 603673199027582233800865690962658788200840421801265879513800936275825283149607494592682399248577952317030919946844544586779753157016713419368305245480475225002075409589124672796762310088315047823944326641796195127887960616233245489292277800
x_P = 988242598102024209142443222735797091124865947630377212000685788401185722363734340078077296726094762629923184580647054085324160886907384467433468201643695530143171690308942579165740155023321078205187997073575151865516850115157955510087002990

#find integer numbers n, k such that n * x_G + k * 10^500 - x_P ~= 0 (I don't know how to solve this, but it is SVP, and using LLL algorithm to solve it)
